% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/object_props.R
\name{key_properties}
\alias{key_properties}
\alias{cert_key_properties}
\alias{cert_x509_properties}
\alias{cert_issuer_properties}
\alias{cert_expiry_actions}
\alias{vault_object_attrs}
\title{Helper functions for key vault objects}
\usage{
key_properties(type = c("RSA", "EC"), hardware = FALSE,
  ec_curve = NULL, rsa_key_size = NULL)

cert_key_properties(type = c("RSA", "EC"), hardware = FALSE,
  ec_curve = NULL, rsa_key_size = NULL, key_exportable = TRUE,
  reuse_key = FALSE)

cert_x509_properties(dns_names = character(), emails = character(),
  upns = character(), key_usages = character(),
  enhanced_key_usages = character(), valid = NULL)

cert_issuer_properties(issuer = "self", cert_type = NULL,
  transparent = NULL)

cert_expiry_actions(auto_renew = NULL, email_contacts = NULL)

vault_object_attrs(enabled = TRUE, expiry_date = NULL,
  activation_date = NULL, recovery_level = NULL)
}
\arguments{
\item{type}{For key properties, the type of key to create: RSA or elliptic curve (EC).}

\item{hardware}{Whether to use a hardware key or software key. The former requires a premium key vault.}

\item{ec_curve}{For an EC key, the type of elliptic curve.}

\item{rsa_key_size}{For an RSA key, the key size, either 2048, 3072 or 4096.}

\item{key_exportable}{For a key used in a certificate, whether it should be exportable.}

\item{reuse_key}{For a key used in a certificate, whether it should be reused when renewing the certificate.}

\item{dns_names, emails, upns}{For \code{cert_x509_properties}, the possible subject alternative names (SANs) for a certificate. These should be character vectors.}

\item{key_usages}{For \code{cert_x509_properties}, a character vector of key usages.}

\item{enhanced_key_usages}{For \code{cert_x509_properties}, a character vector of enhanced key usages (EKUs).}

\item{valid}{For \code{cert_x509_properties}, the number of months the certificate should be valid for.}

\item{issuer}{For \code{cert_issuer_properties}, the name of the issuer. Defaults to "self" for a self-signed certificate.}

\item{cert_type}{For \code{cert_issuer_properties}, the type of certificate to issue, eg "OV-SSL", "DV-SSL" or "EV-SSL".}

\item{transparent}{For \code{cert_issuer_properties}, whether the certificate should be transparent.}

\item{auto_renew}{For \code{cert_expiry_actions}, when to automatically renew the certificate. If this is a number between 0 and 1, it is interpreted as the fraction of lifetime remaining; if greater than 1, the number of days remaining.}

\item{email_contacts}{For \code{cert_expiry_actions}, when to notify the listed contacts for the key vault that a certificate is about to expire. If this is a number between 0 and 1, it is interpreted as the fraction of lifetime remaining; if greater than 1, the number of days remaining.}

\item{enabled}{For \code{vault_object_attrs}, whether this stored object (key, secret, certificate, storage account) is enabled.}

\item{expiry_date, activation_date}{For \code{vault_object_attrs}, the optional expiry date and activation date of the stored object. Can be any R object that can be coerced to POSIXct format.}

\item{recovery_level}{For \code{vault_object_attrs}, the recovery level for the stored object.}
}
\description{
Helper functions for key vault objects
}
\details{
These are convenience functions for specifying the properties of objects stored in a key vault. They return lists of fields to pass to the REST API.
}
