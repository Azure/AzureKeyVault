% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stored_secret.R
\docType{class}
\name{secret}
\alias{secret}
\title{Stored secret object}
\description{
This class represents a secret stored in a vault.
}
\section{Methods}{

This class provides the following methods:\preformatted{update_attributes(attributes=vault_object_attrs(), ...)
list_versions()
set_version(version=NULL)
delete(confirm=TRUE)
}
}

\section{Arguments}{

\itemize{
\item \code{attributes}: For \code{update_attributes}, the new attributes for the object, such as the expiry date and activation date. A convenient way to provide this is via the \link{vault_object_attrs} helper function.
\item \code{...}: For \code{update_attributes}, additional secret-specific properties to update. See \link{secrets}.
\item \code{version}: For \code{set_version}, the version ID or NULL for the current version.
\item \code{confirm}: For \code{delete}, whether to ask for confirmation before deleting the secret.
}
}

\section{Details}{

A secret can have multiple \emph{versions}, which are automatically generated when a secret is created with the same name as an existing secret. By default, the most recent (current) version is used for secret operations; use \code{list_versions} and \code{set_version} to change the version.
}

\section{Value}{

For \code{list_versions}, a vector of secret version IDs.

For \code{set_version}, the secret object with the updated version.
}

\examples{
\dontrun{

vault <- key_vault$new("mykeyvault")

vault$secrets$create("mynewsecret", "secret value")
# new version of an existing secret
vault$secrets$create("mynewsecret", "extra secret value"))

secret <- vault$secrets$get("mynewsecret")
vers <- secret$list_versions()
secret$set_version(vers[2])

}
}
\seealso{
\link{secrets}

\href{https://docs.microsoft.com/en-us/azure/key-vault/}{Azure Key Vault documentation},
\href{https://docs.microsoft.com/en-us/rest/api/keyvault}{Azure Key Vault API reference}
}
